{"version":3,"sources":["game/selectors.js","hooks/counter.js","components/GameClock.js","components/InfoCard.js","game/dish/Dish.js","game/business.js","hooks/timer.js","game/customer/Customer.js","game/customer/business.js","game/dish/business.js","utils.js","game/cook/business.js","game/order/business.js","store/utils.js","game/actions.js","game/customer/CustomerTitle.js","components/EmptyTimer.js","game/customer/Customers.js","game/order/Order.js","game/order/OrderTitle.js","game/order/Orders.js","game/cook/Skill.js","game/cook/SkillPicker.js","game/cook/TakenSkill.js","game/cook/Cook.js","game/cook/CooksTitle.js","game/cook/Cooks.js","game/Game.js","history.js","game/GameStart.js","game/GameInfo.js","components/H1.js","levelEditor/business.js","levelEditor/ImportExportLevel.js","levelEditor/CustomerEditor.js","levelEditor/LevelEditor.js","App.js","serviceWorker.js","game/reducer.js","store/reducer.js","middleware/actionTimestampMiddleware.js","store/store.js","index.js"],"names":["baseSelector","callback","state","game","createSelector","getState","useSelector","isRunning","running","isPaused","paused","getLevels","levels","getCustomers","customers","getCustomerIds","phase","customerPhase","getCustomerPhase","Object","entries","map","_ref","_ref2","slicedToArray","id","data","sort","a","b","time","filter","_ref3","_ref4","length","aPhases","bPhases","_ref5","_ref6","getOrders","orders","getCooks","cooks","getTakenOrderIds","takenOrderIds","getOrderIdToResult","orderIdToResult","getActions","type","actions","action","useCounter","delay","increment","max","arguments","undefined","Number","MAX_SAFE_INTEGER","_useState","useState","_useState2","count","setCount","useEffect","intervalId","setInterval","nextCount","clearInterval","GameClock","minutes","seconds","concat","react_default","createElement","data-testid","containerStyle","css","label","display","alignItems","bodyStyle","flexDirection","overflow","nameStyle","marginLeft","InfoCard","props","src","name","className","containerClassName","es_avatar","Dish","dish","avatar","leaveAt","order","timeIncrease","baseTime","maxTime","additionalTime","WAITING_TIME_TYPE","ORDER","defaultProps","toString","WAITING","useTimer","onFinish","resetOnFinish","ref","useRef","_useCounter","current","progressContainerStyle","justifyContent","takeOrderProgressContainerStyle","makeOrderProgressContainerStyle","Customer","customer","takeOrder","onTimeExceeded","canMake","orderId","takeOrderEnabled","some","isOrderTaken","maxWaitTime","waitingTime","maxMakeTime","orderTime","row","justify","col","span","es_button","onClick","disabled","progress","default","percent","width","status","strokeColor","0%","100%","format","CUSTOMER_PHASE","ARRIVING","ACTIVE","DONE","ANGRY","PREPARATION_PHASE","GATHER_INGREDIENTS","MIX","BAKE","SERVE","PREPARATION_PHASE_TIME","Proxy","business_ref","defineProperty","get","target","p","receiver","DISH","SALAD","phases","PIZZA","createDish","index","_","random","keys","dishPrototype","cloneDeep","forEach","calculateMaxTime","capitaliseFirst","str","substr","toUpperCase","encode64","obj","String","btoa","JSON","stringify","decode64","asObject","decoded","atob","parse","createCook","faker","firstName","image","speed","level","experience","nextLevel","skills","skillsToTake","saveToLocalStorage","cooksCopy","values","cook","nextSkills","skill","cooks64","localStorage","setItem","console","log","SKILL_BAKER","SKILL_PLEASER","SKILL_MIXER","SKILL_COOK","SKILL_GATHERER","SKILL","_SKILL","description","takenDescription","icon","getSkill","Error","PHASE_PRESENT_PARTICIPLE_MAP","_PHASE_PRESENT_PARTIC","getPresentParticiple","PHASE_VERB_MAP","_PHASE_VERB_MAP","getOrderPhaseTime","speedPercent","basePhaseTime","decrease","baker","gatherer","mixer","cookSkill","getTimeDecreaseFromSkill","makeActionCreator","_len","argNames","Array","_key","_len2","args","_key2","makePayloadActionCreator","payload","gameStarted","gamePaused","levelsLoaded","gameStopped","customerAdded","CUSTOMER_PHASE_CHANGED","customerPhaseChanged","cookAdded","cooksReset","orderAdded","orderAttachedToCustomer","ORDER_TAKEN","orderTaken","orderDone","orderNextPhaseStarted","orderPhaseFinished","cookGainedExperience","cookLearnedSkill","actionRegistered","levelFinished","startGame","levelId","dispatch","stopGame","loadCooks","setTimeout","customerData","createCustomer","cookId","customerId","createOrder","startLevel","getItem","realSkill","getFromLocalStorage","finishPhase","Date","now","customerActions","orderActions","arrivedAtTime","timestamp","orderTakenAtTime","orderTakenAt","timeUntilTaken","maxOrderTime","timeOfResultReductionWait","timeOfResultReductionOrder","orderReductionInterval","takingOrderPart","takenTimeOver","round","makingOrderPart","orderDoneTimeOver","doneActions","doneAt","finishOrder","percentage","toFixed","result","minHeight","sectionStyle","margin","arrivingCustomersStyle","doneCustomersStyle","color","angryCustomersStyle","CustomerTitle","arrivingCustomers","doneCustomers","angryCustomers","totalCustomers","role","aria-label","EmptyTimer","start","propTypes","PropTypes","number","isRequired","bool","func","Customers","activeCustomerIds","doneCustomerIds","arrivingCustomerIds","angryCustomerIds","useDispatch","activeCustomers","transitions","useTransition","from","opacity","enter","leave","config","duration","card","title","style","exceedWaitingTime","key","item","web","div","titleContainer","cookButtonsStyle","flexWrap","orderInProgressContainerStyle","rowContainer","Order","isDone","dishStatus","nextDishStatus","currentCook","createButtonText","height","resultsContainer","percentStyle","OrderTitle","orderResults","averageResult","reduce","prev","Orders","takenOrders","Skill","rest","objectWithoutProperties","tooltip","placement","mouseLeaveDelay","assign","fontSize","marginRight","Panel","Collapse","SkillPicker","_ref$disabled","collapse","bordered","expandIcon","isActive","es_icon","theme","header","tag","TakenSkill","1","2","3","4","5","6","7","8","9","10","marginTop","cookCardContainerStyle","cookInfoStyle","Cook","experienceProgress","CooksTitle","Cooks","gamePanelsContainer","Game","flex","getPathname","window","location","pathname","redirect","path","history","pushState","GameStart","setLevel","textAlign","onChange","e","selectedIndex","value","GameInfo","borderBottom","defaultStyle","H1","children","propsStyle","objectSpread","validateLevel","errors","isValid","customerAmount","customerError","saveLevelToLocalStorage","saveLevelsToLocalStorage","base64","ImportExportLevel","setId","setCustomers","useStore","levelInput","setLevelInput","Fragment","input","addonBefore","placeholder","loadLevel","nextLevels","document","body","appendChild","select","execCommand","removeChild","Option","Select","customerCardTitleStyle","errorStyle","customerContainer","CustomerEditor","onCustomerChange","removeCustomer","errorComponent","error","allowClear","es_select","showSearch","optionFilterProp","filterOption","option","indexOf","input_number","buttonContainerStyle","maxWidth","alignSelf","nameContainerStyle","addCustomerButtonStyle","customersContainerStyle","nextCustomerId","LevelEditor","_useState3","_useState4","_useState5","_useState6","changed","setChanged","toConsumableArray","findIndex","c","splice","defaultDish","nextLevelId","nextCustomers","App","_this","this","setState","fetch","then","res","json","getLevelsFromLocalStorage","component","build","date","settings","version","Component","connect","Boolean","hostname","match","initialState","orderResultId","reducer","handlers","hasOwnProperty","createReducer","_createReducer","customerPhases","push","cookExperience","nextExperience","skillId","learnedSkill","slice","skillPleaser","registeredAction","combineReducers","actionTimestampMiddleware","store","next","nextAction","gameStartedActions","composeEnhancers","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","compose","logger","process","LOG","createStore","applyMiddleware","thunk","ReactDOM","render","es","src_App","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.9ae6e202.chunk.js","sourcesContent":["import { useSelector } from \"react-redux\";\n\nfunction baseSelector(callback) {\n  return function(state) {\n    return callback(state.game);\n  };\n}\n\nexport function createSelector(callback) {\n  return function selector(getState) {\n    if (getState) {\n      return baseSelector(callback)(\n        typeof getState === \"function\" ? getState() : getState\n      );\n    }\n    return useSelector(baseSelector(callback), []);\n  };\n}\n\nexport function isRunning(getState) {\n  return createSelector(game => game.running)(getState);\n}\n\nexport function isPaused(getState) {\n  return createSelector(game => game.paused)(getState);\n}\n\nexport function getLevels(getState) {\n  return createSelector(game => game.levels)(getState);\n}\n\nexport function getLevelId(getState) {\n  return createSelector(game => game.levelId)(getState);\n}\n\nexport function getCustomers(getState) {\n  return createSelector(game => game.customers)(getState);\n}\n\nexport function getCustomerPhase(getState) {\n  return createSelector(game => game.customerPhase)(getState);\n}\n\nexport function getCustomerIds(phase, getState) {\n  const customerPhase = getCustomerPhase(getState);\n  return Object.entries(customerPhase)\n    .map(([id, data]) => {\n      data.sort((a, b) => a.time - b.time);\n      return [id, data];\n    })\n    .filter(([id, data]) => data[data.length - 1].phase === phase)\n    .sort((a, b) => {\n      const aPhases = a[1];\n      const bPhases = b[1];\n      const aTime = aPhases[aPhases.length - 1].time;\n      const bTime = bPhases[bPhases.length - 1].time;\n      return aTime - bTime;\n    })\n    .map(([id, phase]) => id);\n}\n\nexport function getOrders(getState) {\n  return createSelector(game => game.orders)(getState);\n}\n\nexport function getCooks(getState) {\n  return createSelector(game => game.cooks)(getState);\n}\n\n/**\n * @returns {Array}\n */\nexport function getTakenOrderIds(getState) {\n  return createSelector(game => game.takenOrderIds)(getState);\n}\n\nexport function isOrderTaken(orderId, getState) {\n  const takenOrderIds = getTakenOrderIds(getState);\n  return takenOrderIds.some(id => id === orderId);\n}\n\nexport function isOrderDone(orderId, getState) {\n  const orderIdToResult = getOrderIdToResult(getState);\n  return !!orderIdToResult[orderId];\n}\n\nexport function getOrderIdToResult(getState) {\n  return createSelector(game => game.orderIdToResult)(getState);\n}\n\nexport function getActions(type, getState) {\n  const allActions = createSelector(game => game.actions)(getState);\n  return allActions.filter(action => action.action.type === type);\n}\n","import { useState, useEffect } from \"react\";\n\nexport function useCounter(\n  delay,\n  increment,\n  max = Number.MAX_SAFE_INTEGER,\n  running\n) {\n  const [count, setCount] = useState(0);\n  useEffect(() => {\n    if (running) {\n      const intervalId = setInterval(() => {\n        setCount(count => {\n          const nextCount = count + increment;\n          if (nextCount < max) {\n            return nextCount;\n          }\n          return max;\n        });\n      }, delay);\n      return () => {\n        clearInterval(intervalId);\n      };\n    }\n  }, [delay, increment, max, running]);\n\n  return {\n    count,\n    setCount\n  };\n}\n","import React from \"react\";\nimport { useCounter } from \"../hooks/counter\";\nimport { isPaused } from \"../game/selectors\";\n\nexport function GameClock() {\n  const paused = isPaused();\n  const { count } = useCounter(1000, 1000, Number.MAX_SAFE_INTEGER, !paused);\n\n  let minutes = 0;\n  let seconds = count / 1000;\n  while (seconds >= 60) {\n    minutes += 1;\n    seconds -= 60;\n  }\n  if (seconds < 10) {\n    seconds = `0${seconds}`;\n  }\n  if (minutes < 10) {\n    minutes = `0${minutes}`;\n  }\n\n  return <div data-testid={\"game-clock\"}>{`${minutes}:${seconds}`}</div>;\n}\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport { Avatar } from \"antd\";\nimport { css } from \"glamor\";\n\nconst containerStyle = css({\n  label: \"info-card-container\",\n  display: \"flex\",\n  alignItems: \"center\"\n});\n\nconst bodyStyle = css({\n  display: \"inline-flex\",\n  flexDirection: \"row\",\n  alignItems: \"center\",\n  overflow: \"auto\"\n});\n\nconst nameStyle = css({\n  marginLeft: \"4px\"\n});\n\nexport function InfoCard(props) {\n  const { src, name, className, containerClassName } = props;\n\n  return (\n    <div className={containerClassName}>\n      <div className={className}>\n        <Avatar src={src} />\n        <span className={nameStyle}>{name}</span>\n      </div>\n    </div>\n  );\n}\n\nInfoCard.propTypes = {\n  src: PropTypes.string.isRequired,\n  name: PropTypes.string,\n  className: PropTypes.string,\n  containerClassName: PropTypes.string\n};\n\nInfoCard.defaultProps = {\n  className: bodyStyle.toString(),\n  containerClassName: containerStyle.toString()\n};\n","import React from \"react\";\nimport { InfoCard } from \"../../components/InfoCard\";\n\nexport function Dish({ dish }) {\n  const { name, avatar } = dish;\n\n  return <InfoCard src={avatar} name={name} />;\n}\n","export function leaveAt(order, type) {\n  const { dish, timeIncrease } = order;\n  const baseTime = (dish.maxTime * 2) / 1000;\n  let additionalTime = 0;\n  if (type === WAITING_TIME_TYPE.ORDER) {\n    additionalTime = timeIncrease * baseTime;\n  }\n  return baseTime + additionalTime;\n}\n\nexport const WAITING_TIME_TYPE = {\n  WAITING: \"WAITING\",\n  ORDER: \"ORDER\"\n};\n","import { useEffect, useRef } from \"react\";\nimport { useCounter } from \"./counter\";\n\nexport function useTimer(\n  delay,\n  increment,\n  max,\n  running,\n  onFinish,\n  resetOnFinish = false,\n  name = \"default name\"\n) {\n  const ref = useRef(false);\n  const { count, setCount } = useCounter(delay, increment, max, running);\n\n  if (count >= max && !ref.current && running) {\n    onFinish();\n    ref.current = true;\n    if (resetOnFinish) {\n      setCount(0);\n    }\n  }\n\n  useEffect(() => {\n    ref.current = false;\n  }, [delay, max, increment, running]);\n\n  return { time: count };\n}\n","import React from \"react\";\nimport { Button, Row, Col, Progress } from \"antd\";\nimport { css } from \"glamor\";\nimport { InfoCard } from \"../../components/InfoCard\";\nimport { Dish } from \"../dish/Dish\";\nimport { getOrders, isOrderTaken, isPaused } from \"../selectors\";\nimport { leaveAt, WAITING_TIME_TYPE } from \"../business\";\nimport { useTimer } from \"../../hooks/timer\";\n\nconst progressContainerStyle = css({\n  display: \"flex\",\n  flexDirection: \"row\",\n  justifyContent: \"flex-start\"\n});\n\nconst takeOrderProgressContainerStyle = css({\n  display: \"flex\",\n  flexDirection: \"column\",\n  alignItems: \"center\"\n});\n\nconst makeOrderProgressContainerStyle = css({\n  display: \"flex\",\n  flexDirection: \"column\",\n  alignItems: \"center\",\n  marginLeft: \"12px\"\n});\n\nexport function Customer({ customer, takeOrder, canMake, onTimeExceeded }) {\n  const { name, orderId, avatar } = customer;\n\n  const paused = isPaused();\n  const orders = getOrders();\n  const order = orders[orderId];\n  const orderTaken = isOrderTaken(order.id);\n\n  const takeOrderEnabled = !orderTaken;\n  const maxWaitTime = leaveAt(order, WAITING_TIME_TYPE.WAITING);\n  const { time: waitingTime } = useTimer(\n    1000,\n    1,\n    maxWaitTime,\n    paused ? false : takeOrderEnabled,\n    () => onTimeExceeded(WAITING_TIME_TYPE.WAITING, maxWaitTime)\n  );\n\n  const maxMakeTime = leaveAt(order, WAITING_TIME_TYPE.ORDER);\n  const { time: orderTime } = useTimer(\n    1000,\n    1,\n    maxMakeTime,\n    paused ? false : !takeOrderEnabled,\n    () => onTimeExceeded(WAITING_TIME_TYPE.ORDER, maxMakeTime)\n  );\n\n  return (\n    <div data-testid={`customer-id-${customer.id}`}>\n      <Row type={\"flex\"} justify={\"start\"}>\n        <Col span={8}>\n          <InfoCard src={avatar} name={name} />\n        </Col>\n        <Col span={8}>{order && <Dish dish={order.dish} />}</Col>\n        <Col span={8}>\n          <Button\n            onClick={takeOrder}\n            type=\"primary\"\n            disabled={paused || !takeOrderEnabled}\n            data-testid={`take-order-${customer.id}`}\n          >\n            Take order\n          </Button>\n        </Col>\n      </Row>\n      <Row type={\"flex\"} justify={\"start\"}>\n        <Col span={24}>\n          <div className={progressContainerStyle}>\n            <div className={takeOrderProgressContainerStyle}>\n              <div>Take order {`${waitingTime} / ${maxWaitTime}s`}</div>\n              <Progress\n                default={\"default\"}\n                type={\"line\"}\n                percent={100 - (waitingTime / maxWaitTime) * 100}\n                width={35}\n                status={!takeOrderEnabled ? \"active\" : \"normal\"}\n                strokeColor={{\n                  \"0%\": \"#e90e00\",\n                  \"100%\": \"#00d002\"\n                }}\n                format={percent => ``}\n              />\n            </div>\n            {!takeOrderEnabled && (\n              <div className={makeOrderProgressContainerStyle}>\n                <div>Make order {`${orderTime} / ${maxMakeTime}s`}</div>\n                <Progress\n                  default={\"default\"}\n                  type={\"line\"}\n                  percent={100 - (orderTime / maxMakeTime) * 100}\n                  width={35}\n                  status={\"active\"}\n                  strokeColor={{\n                    \"0%\": \"#e90e00\",\n                    \"100%\": \"#00d002\"\n                  }}\n                  format={percent => ``}\n                />\n              </div>\n            )}\n          </div>\n        </Col>\n      </Row>\n    </div>\n  );\n}\n","import faker from \"faker\";\n\nexport const CUSTOMER_PHASE = {\n  ARRIVING: \"ARRIVING\",\n  ACTIVE: \"ACTIVE\",\n  DONE: \"DONE\",\n  ANGRY: \"ANGRY\"\n};\n\nexport function createCustomer(customerData) {\n  const customer = {\n    id: customerData.id,\n    name: faker.name.firstName(),\n    orderId: null,\n    avatar: faker.image.avatar(24, 24, true),\n    time: customerData.time\n  };\n  return customer;\n}\n","import _ from \"lodash\";\n\nexport const PREPARATION_PHASE = {\n  WAITING: \"WAITING\",\n  GATHER_INGREDIENTS: \"GATHER_INGREDIENTS\",\n  MIX: \"MIX\",\n  BAKE: \"BAKE\",\n  SERVE: \"SERVE\"\n};\n\nexport const PREPARATION_PHASE_TIME = new Proxy(\n  {\n    [PREPARATION_PHASE.GATHER_INGREDIENTS]: 6000,\n    [PREPARATION_PHASE.MIX]: 12000,\n    [PREPARATION_PHASE.BAKE]: 20000,\n    [PREPARATION_PHASE.SERVE]: 5000\n  },\n  {\n    get: (target, p, receiver) => {\n      return target[p] / 1;\n    }\n  }\n);\n\nexport const DISH = {\n  SALAD: {\n    name: \"Salad\",\n    avatar:\n      \"https://emojipedia-us.s3.dualstack.us-west-1.amazonaws.com/thumbs/160/whatsapp/186/green-salad_1f957.png\",\n    phases: [\n      PREPARATION_PHASE.GATHER_INGREDIENTS,\n      PREPARATION_PHASE.MIX,\n      PREPARATION_PHASE.SERVE\n    ]\n  },\n  PIZZA: {\n    name: \"Pizza\",\n    avatar:\n      \"https://emojipedia-us.s3.dualstack.us-west-1.amazonaws.com/thumbs/160/whatsapp/116/slice-of-pizza_1f355.png\",\n    phases: [\n      PREPARATION_PHASE.GATHER_INGREDIENTS,\n      PREPARATION_PHASE.MIX,\n      PREPARATION_PHASE.BAKE,\n      PREPARATION_PHASE.SERVE\n    ]\n  }\n};\n\nexport function createDish(name) {\n  if (!name) {\n    const index = _.random(0, Object.keys(DISH).length - 1, false);\n    name = Object.keys(DISH)[index];\n  }\n  const dishPrototype = DISH[name];\n  const dish = _.cloneDeep(dishPrototype);\n  dish.phase = PREPARATION_PHASE.WAITING;\n  dish.maxTime = calculateMaxTime(dish);\n  return dish;\n}\n\nfunction calculateMaxTime(dish) {\n  const { phases } = dish;\n  let time = 0;\n  phases.forEach(phase => {\n    time += PREPARATION_PHASE_TIME[phase];\n  });\n  return time;\n}\n","export function capitaliseFirst(str) {\n  return str.substr(0, 1).toUpperCase() + str.substr(1);\n}\n\nexport function removeId(map, id) {\n  return Object.values(map)\n    .filter(obj => obj.id !== id)\n    .reduce((nextMap, curr) => {\n      nextMap[curr.id] = curr;\n      return nextMap;\n    }, {});\n}\n\nexport function encode64(obj) {\n  if (obj instanceof String) {\n    return btoa(obj);\n  }\n  const str = JSON.stringify(obj);\n  return btoa(str);\n}\n\nexport function decode64(obj, asObject = true) {\n  const decoded = atob(obj);\n  if (asObject) {\n    return JSON.parse(decoded);\n  }\n  return decoded;\n}\n","import faker from \"faker\";\nimport _ from \"lodash\";\nimport { decode64, encode64 } from \"../../utils\";\n\nlet id = 0;\n\nexport function createCook() {\n  return {\n    id: ++id,\n    name: faker.name.firstName(),\n    avatar: faker.image.avatar(24, 24, true),\n    orderId: null,\n    speed: 1,\n    level: 1,\n    experience: 0,\n    nextLevel: 4,\n    skills: {},\n    skillsToTake: 0\n  };\n}\n\nexport function getFromLocalStorage() {\n  const cooks64 = localStorage.getItem(\"cooks\");\n  if (!cooks64) {\n    return [];\n  }\n\n  const cooks = Object.values(decode64(cooks64, true));\n  cooks.forEach(cook => {\n    const { skills } = cook;\n    const nextSkills = {};\n    Object.values(skills).forEach(skill => {\n      const realSkill = getSkill(skill.id);\n      realSkill.level = skill.level;\n      nextSkills[skill.id] = realSkill;\n    });\n    cook.skills = nextSkills;\n  });\n  console.log(`Loaded ${cooks.length} cooks from localStorage`);\n  return cooks;\n}\n\nexport function saveToLocalStorage(cooks) {\n  //1. cooks need to be stripped of skills first, because they contain emojis which cannot be base64'ed\n  const cooksCopy = _.cloneDeep(cooks);\n  Object.values(cooksCopy).forEach(cook => {\n    const { skills } = cook;\n    const nextSkills = {};\n    Object.values(skills).forEach(skill => {\n      nextSkills[skill.id] = {\n        id: skill.id,\n        level: skill.level\n      };\n    });\n    cook.skills = nextSkills;\n  });\n  const cooks64 = encode64(cooksCopy);\n  localStorage.setItem(\"cooks\", cooks64);\n  console.log(`Saved ${Object.values(cooks).length} cooks to localStorage`);\n}\n\nexport const SKILL_SERVER = \"SKILL_SERVER\";\nexport const SKILL_BAKER = \"SKILL_BAKER\";\nexport const SKILL_PLEASER = \"SKILL_PLEASER\";\nexport const SKILL_MIXER = \"SKILL_MIXER\";\nexport const SKILL_COOK = \"SKILL_COOK\";\nexport const SKILL_GATHERER = \"SKILL_GATHERER\";\n\nexport const SKILL = {\n  [SKILL_SERVER]: {\n    id: SKILL_SERVER,\n    name: \"Master server\",\n    description: \"Decreases serving time by 5% per skill level\",\n    takenDescription: level => `Decreases serving time by ${level * 5}%`,\n    level: 1,\n    icon: \"🤹🏿‍♂️\"\n  },\n  [SKILL_BAKER]: {\n    id: SKILL_BAKER,\n    name: \"Master baker\",\n    description: \"Decrease baking time by 5% per skill level\",\n    takenDescription: level => `Decreases baking time by ${level * 5}%`,\n    level: 1,\n    icon: \"🔥\"\n  },\n  [SKILL_PLEASER]: {\n    id: SKILL_PLEASER,\n    name: \"People pleaser\",\n    description:\n      \"When order phase is done, increases time the customer can wait by 2% per skill level\",\n    takenDescription: level =>\n      `When order phase is done, increases time the customer can wait by ${level *\n        2}%`,\n    level: 1,\n    icon: \"😎\"\n  },\n  [SKILL_MIXER]: {\n    id: SKILL_MIXER,\n    name: \"Master mixer\",\n    description: \"Decrease mixing time by 5% per skill level\",\n    takenDescription: level => `Decreases mixing time by ${level * 5}%`,\n    level: 1,\n    icon: \"👩🏼‍🔬\"\n  },\n  [SKILL_COOK]: {\n    id: SKILL_COOK,\n    name: \"Master cook\",\n    description: \"Decrease time of all actions by 1% per skill level\",\n    takenDescription: level => `Decreases time of all actions by ${level * 1}%`,\n    level: 1,\n    icon: \"👩‍🍳\"\n  },\n  [SKILL_GATHERER]: {\n    id: SKILL_GATHERER,\n    name: \"Master gatherer\",\n    description: \"Decrease gathering ingredients time by 5% per skill level\",\n    takenDescription: level =>\n      `Decreases gathering ingredients time by ${level * 5}%`,\n    level: 1,\n    icon: \"👨‍🌾\"\n  }\n};\n\nexport function getSkill(id) {\n  const skill = SKILL[id];\n  if (!skill) {\n    throw new Error(`${id} skill does not exist`);\n  }\n  return _.cloneDeep(skill);\n}\n","import _ from \"lodash\";\nimport {\n  createDish,\n  PREPARATION_PHASE,\n  PREPARATION_PHASE_TIME\n} from \"../dish/business\";\nimport {\n  SKILL_BAKER,\n  SKILL_COOK,\n  SKILL_GATHERER,\n  SKILL_MIXER\n} from \"../cook/business\";\n\nlet id = 0;\n\nexport function createOrder(dish = createDish()) {\n  const order = {\n    id: ++id,\n    dish,\n    cookId: null,\n    customerId: null,\n    timeIncrease: 0\n  };\n  return order;\n}\n\nconst PHASE_PRESENT_PARTICIPLE_MAP = {\n  [PREPARATION_PHASE.WAITING]: \"waiting\",\n  [PREPARATION_PHASE.GATHER_INGREDIENTS]: \"gathering ingredients\",\n  [PREPARATION_PHASE.MIX]: \"mixing\",\n  [PREPARATION_PHASE.BAKE]: \"baking\",\n  [PREPARATION_PHASE.SERVE]: \"serving\"\n};\n\nexport function getPresentParticiple(phase) {\n  return PHASE_PRESENT_PARTICIPLE_MAP[phase] || phase;\n}\n\nconst PHASE_VERB_MAP = {\n  [PREPARATION_PHASE.WAITING]: \"wait\",\n  [PREPARATION_PHASE.GATHER_INGREDIENTS]: \"gather ingredients\",\n  [PREPARATION_PHASE.MIX]: \"mix\",\n  [PREPARATION_PHASE.BAKE]: \"bake\",\n  [PREPARATION_PHASE.SERVE]: \"serve\"\n};\n\nexport function getVerb(phase) {\n  return PHASE_VERB_MAP[phase] || phase;\n}\n\nexport function getOrderPhaseTime(cook, order, phase) {\n  if (!cook) {\n    return null;\n  }\n  const speed = _.get(cook, \"speed\", 0);\n  const speedPercent = speed * 100;\n  const basePhaseTime = PREPARATION_PHASE_TIME[phase];\n  const decreaseFromSkill = getTimeDecreaseFromSkill(cook, phase);\n  const speedDecrease = 100 - speedPercent + decreaseFromSkill;\n  const speedMultiplier = (100 - speedDecrease) / 100;\n\n  return speedMultiplier * basePhaseTime;\n}\n\nexport function getTimeDecreaseFromSkill(cook, phase) {\n  const { skills } = cook;\n  let decrease = 0;\n  if (phase === PREPARATION_PHASE.BAKE) {\n    const baker = skills[SKILL_BAKER];\n    if (baker) {\n      decrease += baker.level * 5;\n    }\n  }\n  if (phase === PREPARATION_PHASE.GATHER_INGREDIENTS) {\n    const gatherer = skills[SKILL_GATHERER];\n    if (gatherer) {\n      decrease = gatherer.level * 5;\n    }\n  }\n  if (phase === PREPARATION_PHASE.MIX) {\n    const mixer = skills[SKILL_MIXER];\n    if (mixer) {\n      decrease = mixer.level * 5;\n    }\n  }\n  if (phase === PREPARATION_PHASE.SERVE) {\n  }\n  const cookSkill = skills[SKILL_COOK];\n  if (cookSkill) {\n    decrease += cookSkill.level;\n  }\n\n  return decrease;\n}\n","export function makeActionCreator(type, ...argNames) {\n  return function actionCreator(...args) {\n    const action = { type };\n    argNames.forEach((name, index) => {\n      action[name] = args[index];\n    });\n    return action;\n  };\n}\n\nexport function makePayloadActionCreator(type) {\n  return function payloadActionCreator(payload) {\n    return {\n      type,\n      payload\n    };\n  };\n}\n\nexport function createReducer(initialState, handlers) {\n  return function reducer(state = initialState, action) {\n    if (handlers.hasOwnProperty(action.type)) {\n      return handlers[action.type](state, action);\n    } else {\n      return state;\n    }\n  };\n}\n","import { createCustomer, CUSTOMER_PHASE } from \"./customer/business\";\nimport { createOrder } from \"./order/business\";\nimport {\n  getActions,\n  getCooks,\n  getCustomers,\n  getLevels,\n  getOrderIdToResult,\n  getOrders\n} from \"./selectors\";\nimport { makeActionCreator, makePayloadActionCreator } from \"../store/utils\";\nimport { leaveAt, WAITING_TIME_TYPE } from \"./business\";\nimport { createCook, getFromLocalStorage } from \"./cook/business\";\nimport { createDish } from \"./dish/business\";\n\nexport const GAME_STARTED = \"GAME_STARTED\";\nexport const gameStarted = makePayloadActionCreator(GAME_STARTED);\n\nexport const GAME_PAUSED = \"GAME_PAUSED\";\nexport const gamePaused = makePayloadActionCreator(GAME_PAUSED);\n\nexport const LEVELS_LOADED = \"LEVELS_LOADED\";\nexport const levelsLoaded = makePayloadActionCreator(LEVELS_LOADED);\n\nexport const GAME_STOPPED = \"GAME_STOPPED\";\nexport const gameStopped = makeActionCreator(GAME_STOPPED);\n\nexport const CUSTOMER_ADDED = \"CUSTOMER_ADDED\";\nexport const customerAdded = makePayloadActionCreator(CUSTOMER_ADDED);\n\nexport const CUSTOMER_PHASE_CHANGED = \"CUSTOMER_PHASE_CHANGED\";\nexport const customerPhaseChanged = makeActionCreator(\n  CUSTOMER_PHASE_CHANGED,\n  \"customerId\",\n  \"phase\",\n  \"time\"\n);\n\nexport const COOK_ADDED = \"COOK_ADDED\";\nexport const cookAdded = makePayloadActionCreator(COOK_ADDED);\n\nexport const COOKS_RESET = \"COOKS_RESET\";\nexport const cooksReset = makeActionCreator(COOKS_RESET);\n\nexport const ORDER_ADDED = \"ORDER_ADDED\";\nexport const orderAdded = makePayloadActionCreator(ORDER_ADDED);\n\nexport const ORDER_ATTACHED_TO_CUSTOMER = \"ORDER_ATTACHED_TO_CUSTOMER\";\nexport const orderAttachedToCustomer = makeActionCreator(\n  ORDER_ATTACHED_TO_CUSTOMER,\n  \"orderId\",\n  \"customerId\"\n);\n\nexport const ORDER_TAKEN = \"ORDER_TAKEN\";\nexport const orderTaken = makePayloadActionCreator(ORDER_TAKEN);\n\nexport const ORDER_DONE = \"ORDER_DONE\";\nexport const orderDone = makeActionCreator(\n  ORDER_DONE,\n  \"orderId\",\n  \"customerId\",\n  \"cookId\",\n  \"result\"\n);\n\nexport const ORDER_NEXT_PHASE_STARTED = \"ORDER_NEXT_PHASE_STARTED\";\nexport const orderNextPhaseStarted = makeActionCreator(\n  ORDER_NEXT_PHASE_STARTED,\n  \"orderId\",\n  \"cookId\"\n);\n\nexport const ORDER_PHASE_FINISHED = \"ORDER_PHASE_FINISHED\";\nexport const orderPhaseFinished = makeActionCreator(\n  ORDER_PHASE_FINISHED,\n  \"orderId\",\n  \"cookId\"\n);\n\nexport const COOK_GAINED_EXPERIENCE = \"COOK_GAINED_EXPERIENCE\";\nexport const cookGainedExperience = makeActionCreator(\n  COOK_GAINED_EXPERIENCE,\n  \"cookId\",\n  \"experience\"\n);\n\nexport const COOK_LEARNED_SKILL = \"COOK_LEARNED_SKILL\";\nexport const cookLearnedSkill = makeActionCreator(\n  COOK_LEARNED_SKILL,\n  \"cookId\",\n  \"skillId\"\n);\n\nexport const ACTION_REGISTERED = \"ACTION_REGISTERED\";\nexport const actionRegistered = makeActionCreator(\n  ACTION_REGISTERED,\n  \"action\",\n  \"timestamp\"\n);\n\nexport const LEVEL_FINISHED = \"LEVEL_FINISHED\";\nexport const levelFinished = makeActionCreator(LEVEL_FINISHED);\n\nexport function startGame(levelId) {\n  return function startGame(dispatch, getState) {\n    if (!levelId) {\n      levelId = Object.keys(getLevels(getState))[0];\n    }\n\n    dispatch(stopGame());\n    dispatch(loadCooks());\n\n    setTimeout(() => {\n      dispatch(startLevel(levelId));\n    }, 0);\n  };\n}\n\nexport function loadCooks() {\n  return function loadCooks(dispatch, getState) {\n    dispatch(cooksReset());\n    const cooks = getFromLocalStorage();\n    if (cooks.length === 0) {\n      dispatch(cookAdded(createCook()));\n      dispatch(cookAdded(createCook()));\n    } else {\n      cooks.forEach(cook => dispatch(cookAdded(cook)));\n    }\n  };\n}\n\nexport function startLevel(levelId = 1) {\n  return function startLevel(dispatch, getState) {\n    const levels = getLevels(getState);\n    const level = levels[levelId];\n\n    const { customers } = level;\n\n    customers.forEach(customerData => {\n      const customer = createCustomer(customerData);\n      dispatch(customerAdded(customer));\n      const order = createOrder(createDish(customerData.dish));\n      dispatch(orderAdded(order));\n      dispatch(orderAttachedToCustomer(order.id, customer.id));\n    });\n\n    dispatch(gameStarted(levelId));\n  };\n}\n\nexport function stopGame() {\n  return function stopGame(dispatch, getState) {\n    dispatch(gameStopped());\n  };\n}\n\nexport function exceedWaitingTime(customer, type, time) {\n  return function exceedWaitingTime(dispatch, getState) {\n    const order = getOrders(getState)[customer.orderId];\n    if (!order) {\n      return;\n    }\n    const maxTime = leaveAt(order, type);\n    if (time >= maxTime) {\n      dispatch(\n        customerPhaseChanged(customer.id, CUSTOMER_PHASE.ANGRY, Date.now())\n      );\n      //need to remove order as well\n      const cook = getCooks(getState)[order.cookId];\n      if (type === WAITING_TIME_TYPE.ORDER) {\n        dispatch(\n          finishOrder(order.id, customer.id, cook ? cook.id : null, {\n            percent: 0\n          })\n        );\n      }\n    }\n  };\n}\n\nexport function finishPhase(orderId, cookId) {\n  return (dispatch, getState) => {\n    dispatch(orderPhaseFinished(orderId, cookId));\n\n    const order = getOrders(getState)[orderId];\n    const customers = getCustomers(getState);\n    const customer = customers[order.customerId];\n\n    //The following needs to happen after order phase is finished\n    //1. Assigned cook gets experience\n    dispatch(cookGainedExperience(cookId, 1));\n    //2. If dish has no more phases, it means it's done\n    if (order.dish.phases.length === 0) {\n      dispatch(\n        customerPhaseChanged(order.customerId, CUSTOMER_PHASE.DONE, Date.now())\n      );\n\n      const customerActions = getActions(\n        CUSTOMER_PHASE_CHANGED,\n        getState\n      ).filter(({ action }) => action.customerId === customer.id);\n      const orderActions = getActions(ORDER_TAKEN, getState).filter(\n        ({ action }) => action.payload === orderId\n      );\n      const arrivedAtTime = arrivedAt(customerActions);\n      const orderTakenAtTime = orderTakenAt(orderActions);\n      const timeUntilTaken = orderTakenAtTime - arrivedAtTime;\n      const maxWaitTime = leaveAt(order, WAITING_TIME_TYPE.WAITING) * 1000;\n      const maxOrderTime = leaveAt(order, WAITING_TIME_TYPE.ORDER) * 1000;\n      const timeOfResultReductionWait = maxWaitTime * 0.65;\n      const timeOfResultReductionOrder = maxOrderTime * 0.65;\n      const waitReductionInterval = maxWaitTime - timeOfResultReductionWait;\n      const orderReductionInterval = maxOrderTime - timeOfResultReductionOrder;\n\n      //3. calculate penalty based on time until order was taken\n      let takingOrderPart = 50;\n      const takenTimeOver = timeUntilTaken - timeOfResultReductionWait;\n      if (takenTimeOver > 0) {\n        const reduction = takenTimeOver / waitReductionInterval;\n        takingOrderPart = round(takingOrderPart - takingOrderPart * reduction);\n      }\n\n      //4. calculate penalty based on time until order was done\n      let makingOrderPart = 50;\n      const orderDoneTimeOver =\n        doneAt(customerActions) - orderTakenAtTime - timeOfResultReductionOrder;\n      if (orderDoneTimeOver > 0) {\n        const reduction = orderDoneTimeOver / orderReductionInterval;\n        makingOrderPart = round(makingOrderPart - makingOrderPart * reduction);\n      }\n      //4. find out how much time has passed since order was taken and order was served\n      dispatch(\n        finishOrder(orderId, order.customerId, cookId, {\n          percent: takingOrderPart + makingOrderPart\n        })\n      );\n    }\n  };\n}\n\nfunction arrivedAt(actions) {\n  const activeAction = actions.filter(\n    ({ action }) => action.phase === CUSTOMER_PHASE.ACTIVE\n  )[0];\n  return activeAction.timestamp;\n}\n\nfunction doneAt(actions) {\n  const doneActions = actions.filter(\n    ({ action }) => action.phase === CUSTOMER_PHASE.DONE\n  );\n  if (doneActions.length === 0) {\n    throw new Error(\"Customer needs to have a DONE phase\");\n  }\n  return doneActions[0].timestamp;\n}\n\nfunction orderTakenAt(actions) {\n  return actions[0].timestamp;\n}\n\nfunction round(percentage) {\n  return Number(percentage.toFixed(0));\n}\n\nexport function finishOrder(orderId, customerId, cookId, result) {\n  return function finishOrder(dispatch, getState) {\n    dispatch(orderDone(orderId, customerId, cookId, result));\n\n    const orderCount = Object.values(getOrders(getState)).length;\n    const resultCount = Object.values(getOrderIdToResult(getState)).length;\n\n    if (orderCount === resultCount) {\n      dispatch(levelFinished());\n    }\n  };\n}\n","import React from \"react\";\nimport { css } from \"glamor\";\nimport PropTypes from \"prop-types\";\n\nconst containerStyle = css({\n  display: \"flex\",\n  justifyContent: \"space-between\",\n  minHeight: \"36px\",\n  alignItems: \"center\"\n});\n\nconst sectionStyle = css({\n  margin: \"4px\"\n});\n\nconst arrivingCustomersStyle = css({});\n\nconst doneCustomersStyle = css({\n  color: \"green\"\n});\n\nconst angryCustomersStyle = css({\n  color: \"red\"\n});\n\nexport function CustomerTitle(props) {\n  const {\n    arrivingCustomers,\n    doneCustomers,\n    angryCustomers,\n    totalCustomers\n  } = props;\n\n  return (\n    <div className={containerStyle}>\n      <div>\n        <span className={sectionStyle}>Customers</span>\n        <span\n          className={`${sectionStyle} ${arrivingCustomersStyle}`}\n          data-testid={\"arriving-customers\"}\n        >\n          <span role={\"img\"} aria-label={\"not done customers\"}>\n            🤔 {arrivingCustomers}\n          </span>\n        </span>\n        /\n        <span\n          className={`${sectionStyle} ${doneCustomersStyle}`}\n          data-testid={\"done-customers\"}\n        >\n          <span role={\"img\"} aria-label={\"done customers\"}>\n            😀 {doneCustomers}\n          </span>\n        </span>\n        /\n        <span\n          className={`${sectionStyle} ${angryCustomersStyle}`}\n          data-testid={\"angry-customers\"}\n        >\n          <span role={\"img\"} aria-label={\"angry customers\"}>\n            🤬 {angryCustomers}\n          </span>\n        </span>\n      </div>\n      <span data-testid={\"total-customers\"}>{totalCustomers}</span>\n    </div>\n  );\n}\n\nCustomerTitle.propTypes = {\n  arrivingCustomers: PropTypes.number.isRequired,\n  doneCustomers: PropTypes.number.isRequired,\n  angryCustomers: PropTypes.number.isRequired,\n  totalCustomers: PropTypes.number.isRequired\n};\n","import { useTimer } from \"../hooks/timer\";\nimport PropTypes from \"prop-types\";\n\n/**\n * A component that returns null, but gives us ability to do\n * conditional hooks.\n */\nexport function EmptyTimer(props) {\n  const { delay, time, start, onFinish } = props;\n\n  useTimer(delay, 100, time, start, onFinish, \"empty timer\");\n\n  return null;\n}\n\nEmptyTimer.propTypes = {\n  time: PropTypes.number.isRequired,\n  delay: PropTypes.number,\n  start: PropTypes.bool,\n  onFinish: PropTypes.func\n};\n\nEmptyTimer.defaultProps = {\n  start: false,\n  delay: 100,\n  onFinish: () => {}\n};\n","import React from \"react\";\nimport { Customer } from \"./Customer\";\nimport { Card } from \"antd\";\nimport { getCustomerIds, getCustomers, isPaused } from \"../selectors\";\nimport {\n  customerPhaseChanged,\n  exceedWaitingTime,\n  orderTaken\n} from \"../actions\";\nimport { useDispatch } from \"react-redux\";\nimport { CustomerTitle } from \"./CustomerTitle\";\nimport { CUSTOMER_PHASE } from \"./business\";\nimport { EmptyTimer } from \"../../components/EmptyTimer\";\nimport { useTransition, animated } from \"react-spring\";\nimport { InfoCard } from \"../../components/InfoCard\";\n\nexport function Customers(props) {\n  const customers = getCustomers();\n  const activeCustomerIds = getCustomerIds(CUSTOMER_PHASE.ACTIVE);\n  const doneCustomerIds = getCustomerIds(CUSTOMER_PHASE.DONE);\n  const arrivingCustomerIds = getCustomerIds(CUSTOMER_PHASE.ARRIVING);\n  const angryCustomerIds = getCustomerIds(CUSTOMER_PHASE.ANGRY);\n  const dispatch = useDispatch();\n  const paused = isPaused();\n\n  const activeCustomers = activeCustomerIds.map(id => customers[id]);\n  const arrivingCustomers = arrivingCustomerIds.map(id => customers[id]);\n\n  const transitions = useTransition(\n    arrivingCustomers,\n    function keyTransform(customer) {\n      return customer.id;\n    },\n    {\n      from: { opacity: 0 },\n      enter: { opacity: 1 },\n      leave: { opacity: 0 },\n      config(customer, phase) {\n        if (phase === \"leave\") {\n          return { duration: 0 };\n        }\n        return { duration: customer.time };\n      }\n    }\n  );\n\n  return (\n    <Card\n      title={\n        <CustomerTitle\n          arrivingCustomers={\n            arrivingCustomerIds.length + activeCustomers.length\n          }\n          doneCustomers={doneCustomerIds.length}\n          angryCustomers={angryCustomerIds.length}\n          totalCustomers={Object.values(customers).length}\n        />\n      }\n      style={{ minHeight: \"90vh\" }}\n    >\n      {activeCustomers.map(customer => (\n        <Customer\n          customer={customer}\n          takeOrder={() => dispatch(orderTaken(customer.orderId))}\n          onTimeExceeded={(type, time) =>\n            dispatch(exceedWaitingTime(customer, type, time))\n          }\n          key={customer.id}\n        />\n      ))}\n      {arrivingCustomers.map(customer => (\n        <EmptyTimer\n          key={customer.id}\n          time={customer.time}\n          start={!paused}\n          onFinish={() => {\n            dispatch(\n              customerPhaseChanged(\n                customer.id,\n                CUSTOMER_PHASE.ACTIVE,\n                Date.now()\n              )\n            );\n          }}\n        />\n      ))}\n      {transitions.map(({ item, key, props }) => (\n        <animated.div key={key} style={props}>\n          <InfoCard src={item.avatar} name={item.name} />\n        </animated.div>\n      ))}\n    </Card>\n  );\n}\n","import React from \"react\";\nimport _ from \"lodash\";\nimport { getOrderPhaseTime, getPresentParticiple, getVerb } from \"./business\";\nimport { css } from \"glamor\";\nimport { Button, Card } from \"antd\";\nimport { InfoCard } from \"../../components/InfoCard\";\nimport { capitaliseFirst } from \"../../utils\";\nimport { useTimer } from \"../../hooks/timer\";\nimport { getCooks, getCustomers, isOrderDone, isPaused } from \"../selectors\";\nimport { finishPhase, orderNextPhaseStarted } from \"../actions\";\nimport { useDispatch } from \"react-redux\";\nimport { PREPARATION_PHASE } from \"../dish/business\";\n\nconst titleContainer = css({\n  label: \"TITLE\",\n  display: \"flex\",\n  flexDirection: \"row\",\n  justifyContent: \"space-between\",\n  alignItems: \"center\"\n});\n\nconst cookButtonsStyle = css({\n  display: \"flex\",\n  flexDirection: \"row\",\n  flexWrap: \"wrap\"\n});\n\nconst orderInProgressContainerStyle = css({\n  display: \"flex\",\n  flexDirection: \"row\",\n  alignItems: \"center\"\n});\n\nconst rowContainer = css({\n  minHeight: \"68px\",\n  display: \"flex\",\n  flexDirection: \"row\",\n  justifyContent: \"space-between\",\n  alignItems: \"center\"\n});\n\nexport function Order({ order }) {\n  const { customerId, dish, id } = order;\n  const isDone = isOrderDone(id);\n  const { phase: dishStatus } = dish;\n  const nextDishStatus = _.get(dish, \"phases[0]\", \"\");\n\n  const paused = isPaused();\n  const dispatch = useDispatch();\n  const customers = getCustomers();\n  let cooks = getCooks();\n  const customer = customers[customerId];\n\n  const currentCook = cooks[order.cookId];\n  const orderTime = getOrderPhaseTime(currentCook, order, dishStatus);\n  cooks = nextDishStatus ? Object.values(cooks) : [];\n\n  const runTimer = !!currentCook;\n  const { time } = useTimer(\n    100,\n    100,\n    orderTime || 0,\n    paused ? false : !!runTimer,\n    () => dispatch(finishPhase(order.id, currentCook.id)),\n    true\n  );\n\n  function createButtonText(cook) {\n    return `${cook.name} ${Number(\n      getOrderPhaseTime(cook, order, nextDishStatus) / 1000\n    ).toFixed(2)}s`;\n  }\n\n  function title() {\n    return (\n      <div className={titleContainer}>\n        <InfoCard src={dish.avatar} name={`Ordered by ${customer.name}`} />\n        <div>{capitaliseFirst(getPresentParticiple(dishStatus))}</div>\n      </div>\n    );\n  }\n\n  return (\n    <Card title={title()} data-testid={isDone ? null : `order-id-${order.id}`}>\n      <div className={rowContainer}>\n        <div>\n          {dish.phase === PREPARATION_PHASE.WAITING && (\n            <div>{capitaliseFirst(getVerb(nextDishStatus))}</div>\n          )}\n          {dish.phase !== PREPARATION_PHASE.WAITING && (\n            <div className={orderInProgressContainerStyle}>\n              <InfoCard\n                src={currentCook.avatar}\n                name={`${currentCook.name} is ${getPresentParticiple(\n                  dishStatus\n                )} ${Number(time / 1000).toFixed(1)} / ${orderTime / 1000}s`}\n              />\n            </div>\n          )}\n        </div>\n        <div className={cookButtonsStyle}>\n          {cooks.map(cook => (\n            <div key={cook.id}>\n              <Button\n                type={\"primary\"}\n                style={{ margin: \"4px\", height: \"100%\" }}\n                onClick={() =>\n                  dispatch(orderNextPhaseStarted(order.id, cook.id))\n                }\n                disabled={\n                  paused ||\n                  !!cook.orderId ||\n                  dish.phase !== PREPARATION_PHASE.WAITING\n                }\n                data-testid={`next-phase-${order.id}`}\n              >\n                <InfoCard src={cook.avatar} name={createButtonText(cook)} />\n              </Button>\n            </div>\n          ))}\n        </div>\n      </div>\n    </Card>\n  );\n}\n","import React from \"react\";\nimport { css } from \"glamor\";\nimport { getOrderIdToResult, getOrders } from \"../selectors\";\nimport { InfoCard } from \"../../components/InfoCard\";\n\nconst containerStyle = css({\n  display: \"flex\",\n  flexDirection: \"row\",\n  alignItems: \"center\",\n  justifyContent: \"space-between\",\n  minHeight: \"36px\"\n});\n\nconst resultsContainer = css({\n  display: \"flex\",\n  flexDirection: \"row\",\n  flexWrap: \"wrap\"\n});\n\nconst percentStyle = css({\n  marginLeft: \"4px\",\n  display: \"inline-flex\",\n  flexDirection: \"row\",\n  alignItems: \"center\"\n});\n\nexport function OrderTitle(props) {\n  const orderResults = Object.values(getOrderIdToResult());\n  const orders = getOrders();\n  let averageResult = null;\n  if (orderResults.length > 0) {\n    const sum = orderResults\n      .map(result => result.percent)\n      .reduce((prev, current) => {\n        return prev + current;\n      }, 0);\n    averageResult = (sum / orderResults.length).toFixed(1);\n  }\n\n  return (\n    <div className={containerStyle}>\n      <div>Orders {averageResult ? `[Avg: ${averageResult}%]` : null}</div>\n      <div className={resultsContainer}>\n        {orderResults\n          .sort((a, b) => b.percent - a.percent)\n          .map(result => (\n            <span\n              key={result.id}\n              data-testid={`result-${result.id}`}\n              className={percentStyle}\n            >\n              <InfoCard\n                src={orders[result.orderId].dish.avatar}\n                name={`${result.percent}%`}\n              />\n            </span>\n          ))}\n      </div>\n    </div>\n  );\n}\n","import React from \"react\";\nimport { useTransition, animated } from \"react-spring\";\nimport { Order } from \"./Order\";\nimport { getOrders, getTakenOrderIds } from \"../selectors\";\nimport { Card } from \"antd\";\nimport { OrderTitle } from \"./OrderTitle\";\n\nexport function Orders(props) {\n  const orders = getOrders();\n  const takenOrderIds = getTakenOrderIds();\n\n  const takenOrders = takenOrderIds.map(id => orders[id]);\n\n  const transitions = useTransition(takenOrders, order => order.id, {\n    from: { opacity: 0 },\n    enter: { opacity: 1 },\n    leave: { opacity: 0 }\n  });\n\n  return (\n    <Card title={<OrderTitle />} style={{ minHeight: \"90vh\" }}>\n      {transitions.map(({ item, key, props }) => (\n        <animated.div key={key} style={props}>\n          <Order order={item} />\n        </animated.div>\n      ))}\n    </Card>\n  );\n}\n","import React from \"react\";\nimport { Button, Tooltip } from \"antd\";\n\nexport function Skill({ skill, ...rest }) {\n  const { name, icon, description } = skill;\n\n  return (\n    <Tooltip title={description} placement={\"bottom\"} mouseLeaveDelay={0}>\n      <Button\n        style={{\n          display: \"flex\",\n          flexDirection: \"row\",\n          alignItems: \"center\",\n          margin: \"4px\",\n          height: \"auto\"\n        }}\n        {...rest}\n      >\n        <span role={\"img\"} style={{ fontSize: \"2rem\", marginRight: \"4px\" }}>\n          {icon}\n        </span>\n        {name}\n      </Button>\n    </Tooltip>\n  );\n}\n","import React from \"react\";\nimport { Collapse, Icon, Tag } from \"antd\";\nimport { Skill } from \"./Skill\";\nimport { SKILL } from \"./business\";\nimport { useDispatch } from \"react-redux\";\nimport { cookLearnedSkill } from \"../actions\";\n\nconst Panel = Collapse.Panel;\n\nexport function SkillPicker({ cook, disabled = false }) {\n  const { id, skillsToTake } = cook;\n  const dispatch = useDispatch();\n\n  if (!skillsToTake) {\n    return null;\n  }\n\n  return (\n    <div\n      style={{\n        display: \"flex\",\n        flexDirection: \"row\",\n        alignItems: \"center\"\n      }}\n    >\n      <Collapse\n        bordered={false}\n        expandIcon={({ isActive }) => (\n          <Icon type=\"read\" theme={isActive ? \"filled\" : \"outlined\"} />\n        )}\n      >\n        <Panel\n          key={1}\n          disabled={disabled}\n          header={\n            <span>\n              Learn new skill <Tag color=\"geekblue\">{skillsToTake}</Tag>\n            </span>\n          }\n        >\n          <div\n            style={{\n              display: \"flex\",\n              flexDirection: \"row\",\n              flexWrap: \"wrap\"\n            }}\n          >\n            {Object.values(SKILL).map(skill => (\n              <Skill\n                key={skill.id}\n                skill={skill}\n                onClick={() => dispatch(cookLearnedSkill(id, skill.id))}\n              />\n            ))}\n          </div>\n        </Panel>\n      </Collapse>\n    </div>\n  );\n}\n","import { Tag, Tooltip } from \"antd\";\nimport React from \"react\";\n\nexport function TakenSkill({ skill, ...rest }) {\n  const { level, icon, takenDescription } = skill;\n\n  const color = {\n    1: \"lime\",\n    2: \"green\",\n    3: \"cyan\",\n    4: \"blue\",\n    5: \"purple\",\n    6: \"magenta\",\n    7: \"red\",\n    8: \"volcano\",\n    9: \"orange\",\n    10: \"gold\"\n  };\n\n  return (\n    <Tooltip\n      title={takenDescription(level)}\n      placement={\"bottom\"}\n      mouseLeaveDelay={0}\n    >\n      <div\n        style={{ display: \"flex\", flexDirection: \"row\", alignItems: \"center\" }}\n      >\n        <Tag color={color[level]} style={{ marginTop: \"8px\" }}>\n          {level}\n        </Tag>\n        <span role={\"img\"} style={{ fontSize: \"2rem\", marginRight: \"4px\" }}>\n          {icon}\n        </span>\n      </div>\n    </Tooltip>\n  );\n}\n","import React from \"react\";\nimport { InfoCard } from \"../../components/InfoCard\";\nimport { Progress } from \"antd\";\nimport { css } from \"glamor\";\nimport { SkillPicker } from \"./SkillPicker\";\nimport { TakenSkill } from \"./TakenSkill\";\nimport { isPaused } from \"../selectors\";\n\nconst containerStyle = css({\n  display: \"flex\",\n  flexDirection: \"column\",\n  justifyContent: \"center\",\n  alignItems: \"flex-start\"\n});\n\nconst cookCardContainerStyle = css({\n  width: \"148px\",\n  display: \"flex\",\n  alignItems: \"center\",\n  height: \"100%\"\n});\n\nconst cookInfoStyle = css({\n  display: \"flex\",\n  flexDirection: \"row\",\n  alignItems: \"center\"\n});\n\nexport function Cook({ cook }) {\n  const paused = isPaused();\n  const { name, avatar, nextLevel, experience, skills } = cook;\n\n  const experienceProgress = Number(\n    Number((experience / nextLevel) * 100).toFixed(0)\n  );\n\n  return (\n    <div className={containerStyle}>\n      <div className={cookInfoStyle}>\n        <InfoCard\n          src={avatar}\n          name={name}\n          containerClassName={cookCardContainerStyle.toString()}\n        />\n        <div>\n          <div>\n            {`Level ${cook.level}. Experience: ${cook.experience} / ${\n              cook.nextLevel\n            }.`}\n          </div>\n          <div>{`Speed modifier: ${cook.speed}`}</div>\n        </div>\n      </div>\n      <div style={{ display: \"flex\", flexDirection: \"column\" }}>\n        <div\n          style={{ display: \"flex\", flexDirection: \"row\", flexWrap: \"wrap\" }}\n        >\n          {Object.values(skills).map(skill => (\n            <TakenSkill key={skill.id} skill={skill} />\n          ))}\n        </div>\n        <SkillPicker cook={cook} disabled={!paused} />\n      </div>\n      <Progress\n        default={\"default\"}\n        type={\"line\"}\n        percent={experienceProgress}\n        status={\"active\"}\n      />\n    </div>\n  );\n}\n","import React from \"react\";\nimport { Button } from \"antd\";\nimport { css } from \"glamor\";\nimport { saveToLocalStorage } from \"./business\";\nimport { useDispatch } from \"react-redux\";\nimport { loadCooks } from \"../actions\";\n\nconst containerStyle = css({\n  minHeight: \"36px\",\n  display: \"flex\",\n  justifyContent: \"space-between\",\n  alignItems: \"center\"\n});\n\nexport function CooksTitle(props) {\n  const dispatch = useDispatch();\n  return (\n    <div className={containerStyle}>\n      <div>Cooks</div>\n      <Button\n        onClick={() => {\n          saveToLocalStorage({});\n          dispatch(loadCooks());\n        }}\n      >\n        Reset\n      </Button>\n    </div>\n  );\n}\n","import React from \"react\";\nimport { Cook } from \"./Cook\";\nimport { getCooks } from \"../selectors\";\nimport { Card } from \"antd\";\nimport { CooksTitle } from \"./CooksTitle\";\n\nexport function Cooks(props) {\n  const cooks = getCooks();\n\n  return (\n    <Card title={<CooksTitle />} style={{ minHeight: \"90vh\" }}>\n      {Object.values(cooks).map(cook => (\n        <Cook cook={cook} key={cook.id} />\n      ))}\n    </Card>\n  );\n}\n","import React from \"react\";\nimport { css } from \"glamor\";\nimport { Col, Row } from \"antd\";\nimport { getLevelId, isRunning } from \"./selectors\";\nimport { GameClock } from \"../components/GameClock\";\nimport { Customers } from \"./customer/Customers\";\nimport { Orders } from \"./order/Orders\";\nimport { Cooks } from \"./cook/Cooks\";\n\nconst containerStyle = css({\n  display: \"flex\",\n  flexDirection: \"column\"\n});\n\nconst gamePanelsContainer = css({\n  display: \"flex\",\n  flexDirection: \"row\",\n  width: \"100%\",\n  justifyContent: \"space-between\"\n});\n\nexport function Game(props) {\n  const running = isRunning();\n  const levelId = getLevelId();\n\n  if (!running) {\n    return null;\n  }\n\n  return (\n    <div className={containerStyle}>\n      <div\n        style={{\n          display: \"flex\",\n          justifyContent: \"center\",\n          flexDirection: \"column\",\n          alignItems: \"center\"\n        }}\n      >\n        <div>{`Level: ${levelId}`}</div>\n        <GameClock />\n      </div>\n      <div className={gamePanelsContainer}>\n        <div style={{ flex: 1 }}>\n          <Customers />\n        </div>\n        <Row style={{ flex: 3, display: \"flex\", flexDirection: \"row\" }}>\n          <Col span={16}>\n            <Orders />\n          </Col>\n          <Col span={8}>\n            <Cooks />\n          </Col>\n        </Row>\n      </div>\n    </div>\n  );\n}\n","export function getPathname() {\n  return window.location.pathname;\n}\n\nexport function redirect(path) {\n  window.history.pushState(null, \"Something\", path);\n}\n","import React, { useState } from \"react\";\nimport { Button } from \"antd\";\nimport { getLevels, isPaused, isRunning } from \"./selectors\";\nimport { gamePaused, startGame, stopGame } from \"./actions\";\nimport { useDispatch } from \"react-redux\";\nimport { redirect } from \"../history\";\n\nexport function GameStart(props) {\n  const running = isRunning();\n  const paused = isPaused();\n  const dispatch = useDispatch();\n  const levels = getLevels() || {};\n\n  const [level, setLevel] = useState(0);\n\n  return (\n    <div style={{ textAlign: \"center\" }}>\n      <div style={{ textAlign: \"center\" }}>Game options</div>\n      <div\n        style={{\n          display: \"flex\",\n          flexDirection: \"column\",\n          justifyContent: \"center\",\n          alignItems: \"center\"\n        }}\n      >\n        {running && (\n          <div>\n            <Button onClick={() => dispatch(stopGame())} type={\"danger\"}>\n              Stop\n            </Button>\n            <Button\n              onClick={() => dispatch(gamePaused(!paused))}\n              type={\"danger\"}\n              data-testid={\"pause-game\"}\n            >\n              {paused ? \"Resume\" : \"Pause\"}\n            </Button>\n          </div>\n        )}\n        <div\n          style={{\n            display: \"flex\",\n            flexDirection: \"row\",\n            alignItems: \"center\"\n          }}\n        >\n          <div>Level select</div>\n          <Button\n            onClick={() => {\n              dispatch(startGame(level));\n            }}\n          >\n            Start level\n          </Button>\n          <select\n            onChange={e =>\n              setLevel(Object.keys(levels)[e.target.selectedIndex])\n            }\n          >\n            {Object.entries(levels).map(([id, level]) => (\n              <option value={id} key={id}>\n                {id}\n              </option>\n            ))}\n          </select>\n          <Button\n            type={\"danger\"}\n            data-testid={\"level-editor\"}\n            onClick={() => {\n              redirect(\"/leveleditor\");\n            }}\n          >\n            Level editor\n          </Button>\n        </div>\n      </div>\n    </div>\n  );\n}\n","import React from \"react\";\nimport { isRunning } from \"./selectors\";\n\nexport function GameInfo(props) {\n  const running = isRunning();\n\n  if (running) {\n    return null;\n  }\n\n  return (\n    <div style={{ textAlign: \"center\" }}>\n      <div style={{ borderBottom: \"1px solid gray\", margin: 12 }} />\n      <div>Hello!</div>\n      <div>Welcome to my 'restaurant' simulator game.</div>\n      <div>\n        Customers will come to your restaurant, you will get their orders and\n        serve them food.\n      </div>\n      <div style={{ borderBottom: \"1px solid gray\", margin: 12 }} />\n    </div>\n  );\n}\n","import React from \"react\";\n\nconst defaultStyle = { textAlign: \"center\" };\n\nexport function H1({ children, style: propsStyle }) {\n  const style = { ...defaultStyle, ...propsStyle };\n  return <h1 style={style}>{children}</h1>;\n}\n","import { getLevels } from \"../game/selectors\";\nimport { decode64, encode64 } from \"../utils\";\n\nexport function validateLevel(level) {\n  const { id, customers } = level;\n\n  const errors = {\n    customers: {},\n    isValid: true\n  };\n\n  if (!id) {\n    errors.id = \"Level needs a name\";\n    errors.isValid = false;\n  }\n\n  if (customers.length === 0) {\n    errors.customerAmount = \"Needs at least 1 customer\";\n    errors.isValid = false;\n  }\n\n  customers.forEach(customer => {\n    const customerError = {\n      name: \"\",\n      dish: \"\",\n      time: \"\"\n    };\n    if (!customer.name) {\n      customerError.name = \"Name cannot be empty\";\n      errors.isValid = false;\n    }\n    if (!customer.dish) {\n      customerError.dish = \"Dish cannot be empty\";\n      errors.isValid = false;\n    }\n    if (customer.time < 0) {\n      customerError.time = \"Time cannot be negative\";\n      errors.isValid = false;\n    }\n    errors.customers[customer.id] = customerError;\n  });\n\n  return errors;\n}\n\nexport function saveLevelToLocalStorage(level, getState) {\n  if (!level.id) {\n    return;\n  }\n  const levels = getLevels(getState);\n  levels[level.id] = level;\n  saveLevelsToLocalStorage(levels);\n  console.log(`Saved level ${level.id} to localStorage`);\n}\n\nexport function saveLevelsToLocalStorage(levels) {\n  const base64 = encode64(levels);\n  localStorage.setItem(\"levels\", base64);\n  console.log(`Saved ${Object.values(levels).length} levels to localStorage`);\n}\n\nexport function getLevelsFromLocalStorage() {\n  const base64 = localStorage.getItem(\"levels\");\n  if (!base64) {\n    return {};\n  }\n  return decode64(base64, true);\n}\n\n/**\n * Loads a level.\n */\nexport function loadLevel(str) {\n  if (!str || typeof str !== \"string\") {\n    throw Error(`Invalid string ${str}`);\n  }\n  //1. attempts to decode string from base64\n  try {\n    return decode64(str, true);\n  } catch (e) {\n    console.log(`${str} is not in base64`);\n  }\n  //2. if that failed try to see if this is parseable json\n  try {\n    str = JSON.parse(str);\n  } catch (e) {\n    console.log(`${str} is not a parseable json`);\n    throw new Error(`Invalid input ${str}`);\n  }\n\n  const errors = validateLevel(str);\n  if (!errors.isValid) {\n    console.log(`Invalid level ${str}`);\n    throw new Error(`Invalid level ${str}`);\n  }\n  return str;\n}\n","import { Button, Input } from \"antd\";\nimport { loadLevel, saveLevelToLocalStorage } from \"./business\";\nimport { levelsLoaded } from \"../game/actions\";\nimport React, { useState } from \"react\";\nimport { useDispatch, useStore } from \"react-redux\";\n\nexport function ImportExportLevel(props) {\n  const { id, setId, customers, levels, setCustomers } = props;\n  const dispatch = useDispatch();\n  const getState = useStore().getState;\n  const [levelInput, setLevelInput] = useState(\"\");\n\n  return (\n    <>\n      <Input\n        addonBefore={\"Load level\"}\n        placeholder={\n          \"Paste exported level or pastebin link with exported level\"\n        }\n        onChange={e => setLevelInput(e.target.value)}\n      />\n      <Button\n        type={\"danger\"}\n        onClick={() => {\n          try {\n            setId(null);\n            const level = loadLevel(levelInput);\n            const nextLevels = { ...levels };\n            nextLevels[level.id] = level;\n            dispatch(levelsLoaded(nextLevels));\n            saveLevelToLocalStorage(level, getState);\n            setId(level.id);\n            setCustomers(level.customers);\n          } catch (e) {}\n        }}\n      >\n        Load\n      </Button>\n      <Button\n        type={\"danger\"}\n        onClick={() => {\n          const str = JSON.stringify({ id, customers });\n          const input = document.createElement(\"input\");\n          input.value = str;\n          document.body.appendChild(input);\n          input.select();\n          document.execCommand(\"copy\");\n          document.body.removeChild(input);\n        }}\n      >\n        Export\n      </Button>\n    </>\n  );\n}\n","import React from \"react\";\nimport { Card, Icon, Input, InputNumber, Select } from \"antd\";\nimport { createDish, DISH } from \"../game/dish/business\";\nimport { Dish } from \"../game/dish/Dish\";\nimport { css } from \"glamor\";\n\nconst Option = Select.Option;\n\nconst customerCardTitleStyle = css({\n  display: \"flex\",\n  flexDirection: \"row\",\n  alignItems: \"center\"\n});\n\nconst errorStyle = css({\n  color: \"red\"\n});\n\nconst customerContainer = css({\n  margin: \"4px\",\n  display: \"flex\",\n  flexDirection: \"row\",\n  justifyContent: \"center\",\n  alignItems: \"center\"\n});\n\nexport function CustomerEditor(props) {\n  const { customer, onCustomerChange, errors, removeCustomer } = props;\n\n  function errorComponent(error) {\n    if (!error) return null;\n    return <div className={errorStyle}>{error}</div>;\n  }\n\n  return (\n    <Card\n      key={customer.id}\n      style={{ width: \"30%\" }}\n      title={\n        <div className={customerCardTitleStyle}>\n          <Icon type=\"smile\" theme=\"outlined\" />\n          <Input\n            addonBefore={\"Customer name\"}\n            value={customer.name}\n            allowClear\n            onChange={e => {\n              onCustomerChange(customer, \"name\", e.target.value);\n            }}\n            style={{ width: \"200\" }}\n          />\n          <Icon\n            type=\"delete\"\n            theme={\"filled\"}\n            onClick={() => {\n              removeCustomer(customer);\n            }}\n          />\n          <div>{errorComponent(errors.customers[customer.id].name)}</div>\n        </div>\n      }\n    >\n      <div className={customerContainer}>\n        <div>\n          <div>Dish</div>\n          <Select\n            showSearch\n            style={{ width: 200 }}\n            placeholder=\"Select a dish\"\n            optionFilterProp=\"children\"\n            onChange={value => {\n              onCustomerChange(customer, \"dish\", value);\n            }}\n            filterOption={(input, option) =>\n              option.key.toUpperCase().indexOf(input.toUpperCase()) >= 0\n            }\n            value={customer.dish.toUpperCase()}\n          >\n            {Object.values(DISH)\n              .map(dish => dish.name.toUpperCase())\n              .map(name => createDish(name))\n              .map(dish => (\n                <Option value={dish.name.toUpperCase()} key={dish.name}>\n                  <Dish dish={dish} />\n                </Option>\n              ))}\n          </Select>\n          <div>{errorComponent(errors.customers[customer.id].dish)}</div>\n        </div>\n        <div>\n          <div>Time {errorComponent(errors.customers[customer.id].time)}</div>\n          <InputNumber\n            value={customer.time}\n            onChange={value => onCustomerChange(customer, \"time\", value)}\n          />\n        </div>\n      </div>\n    </Card>\n  );\n}\n","import React, { useState } from \"react\";\nimport { Button, Input } from \"antd\";\nimport { redirect } from \"../history\";\nimport { css } from \"glamor\";\nimport faker from \"faker\";\nimport { DISH } from \"../game/dish/business\";\nimport {\n  saveLevelsToLocalStorage,\n  saveLevelToLocalStorage,\n  validateLevel\n} from \"./business\";\nimport { getLevels } from \"../game/selectors\";\nimport { useDispatch, useStore } from \"react-redux\";\nimport { levelsLoaded } from \"../game/actions\";\nimport { ImportExportLevel } from \"./ImportExportLevel\";\nimport { CustomerEditor } from \"./CustomerEditor\";\n\nconst buttonContainerStyle = css({\n  display: \"flex\",\n  flexDirection: \"row\",\n  justifyContent: \"center\",\n  maxWidth: \"1000px\",\n  flexWrap: \"wrap\",\n  alignSelf: \"center\"\n});\n\nconst nameContainerStyle = css({\n  margin: \"4px\",\n  display: \"flex\",\n  flexDirection: \"row\",\n  justifyContent: \"center\",\n  alignItems: \"center\"\n});\n\nconst addCustomerButtonStyle = css({\n  margin: \"4px\",\n  display: \"flex\",\n  flexDirection: \"row\",\n  justifyContent: \"center\"\n});\n\nconst customersContainerStyle = css({\n  margin: \"4px\",\n  display: \"flex\",\n  flexDirection: \"row\",\n  flexWrap: \"wrap\",\n  justifyContent: \"center\",\n  alignItems: \"center\"\n});\n\nconst errorStyle = css({\n  color: \"red\"\n});\n\nlet nextCustomerId = 0;\n\nexport function LevelEditor(props) {\n  const getState = useStore().getState;\n  const dispatch = useDispatch();\n  const levels = getLevels() || {};\n  const [id, setId] = useState(\"\");\n  const [customers, setCustomers] = useState([]);\n  const [changed, setChanged] = useState(false);\n\n  function onCustomerChange(customer, key, value) {\n    customer[key] = value;\n    setCustomers([...customers]);\n    setChanged(true);\n  }\n\n  const errors = validateLevel({\n    id,\n    customers\n  });\n\n  function removeCustomer(customer) {\n    const index = customers.findIndex(c => c.id === customer.id);\n    if (index > -1) {\n      customers.splice(index, 1);\n      setCustomers([...customers]);\n    }\n  }\n\n  function errorComponent(error) {\n    if (!error) return null;\n    return <div className={errorStyle}>{error}</div>;\n  }\n\n  const defaultDish = Object.values(DISH)[0].name.toUpperCase();\n\n  return (\n    <div style={{ width: \"100%\", display: \"flex\", flexDirection: \"column\" }}>\n      <div className={buttonContainerStyle}>\n        <Button type={\"danger\"} onClick={() => redirect(\"/\")}>\n          Back\n        </Button>\n        <Button\n          type={\"danger\"}\n          onClick={() => {\n            setCustomers([]);\n            setId(\"\");\n          }}\n        >\n          Reset level\n        </Button>\n        <Button\n          type={\"danger\"}\n          onClick={() => {\n            customers.sort((a, b) => a.time - b.time);\n            setCustomers([...customers]);\n          }}\n        >\n          Sort customers by time\n        </Button>\n        <select\n          onChange={e => {\n            const nextLevelId = Object.keys(levels)[e.target.selectedIndex - 1];\n            const nextLevel = levels[nextLevelId];\n            const nextCustomers = nextLevel.customers.map(customer => {\n              const name = customer.name || faker.name.firstName();\n              return {\n                ...customer,\n                name\n              };\n            });\n            setCustomers(nextCustomers);\n            setId(nextLevelId);\n            setChanged(true);\n          }}\n          value={id}\n        >\n          <option value={\"\"}>-</option>\n          {Object.entries(levels).map(([id, level]) => (\n            <option value={id} key={id}>\n              {id}\n            </option>\n          ))}\n        </select>\n        <Button\n          type={\"danger\"}\n          onClick={() => {\n            const errors = validateLevel({ id, customers });\n            if (!errors.isValid) {\n              console.log(\"Level invalid, cannot save\", errors);\n              return;\n            }\n            saveLevelToLocalStorage(\n              {\n                id,\n                customers\n              },\n              getState\n            );\n            setChanged(false);\n            const nextLevels = { ...levels };\n            nextLevels[id] = { id, customers };\n            dispatch(levelsLoaded(nextLevels));\n          }}\n        >\n          Save {changed ? `*` : null}\n        </Button>\n        <Button\n          type={\"danger\"}\n          onClick={() => {\n            const nextLevels = { ...levels };\n            delete nextLevels[id];\n            saveLevelsToLocalStorage(nextLevels);\n            dispatch(levelsLoaded(nextLevels));\n          }}\n        >\n          Delete level\n        </Button>\n        <div style={{ display: \"flex\", flexDirection: \"row\" }}>\n          <ImportExportLevel\n            id={id}\n            setId={setId}\n            levels={levels}\n            customers={customers}\n            setCustomers={setCustomers}\n          />\n        </div>\n      </div>\n      <div className={nameContainerStyle}>\n        <Input\n          placeholder={\"Level name\"}\n          value={id}\n          allowClear\n          addonBefore={\"Level name\"}\n          onChange={e => {\n            setId(e.target.value);\n          }}\n          style={{ width: \"25%\" }}\n        />\n        <div>{errorComponent(errors.id)}</div>\n      </div>\n      <div className={addCustomerButtonStyle}>\n        <Button\n          type={\"danger\"}\n          onClick={() => {\n            setCustomers([\n              ...customers,\n              {\n                id: ++nextCustomerId,\n                name: faker.name.firstName(),\n                time: 0,\n                dish: defaultDish\n              }\n            ]);\n          }}\n        >\n          Add customer\n        </Button>\n      </div>\n      <div className={customersContainerStyle}>\n        {customers.map((customer, index) => {\n          return (\n            <CustomerEditor\n              key={customer.id}\n              customer={customer}\n              errors={errors}\n              onCustomerChange={onCustomerChange}\n              removeCustomer={removeCustomer}\n            />\n          );\n        })}\n      </div>\n    </div>\n  );\n}\n","import React, { Component } from \"react\";\nimport { Game } from \"./game/Game\";\nimport { GameStart } from \"./game/GameStart\";\nimport { GameInfo } from \"./game/GameInfo\";\nimport \"antd/dist/antd.css\";\nimport { H1 } from \"./components/H1\";\nimport { LevelEditor } from \"./levelEditor/LevelEditor\";\nimport { getPathname } from \"./history\";\nimport { levelsLoaded } from \"./game/actions\";\nimport { connect } from \"react-redux\";\nimport { getLevelsFromLocalStorage } from \"./levelEditor/business\";\nimport settings from \"../package.json\";\nimport build from \"./build.json\";\n\nclass App extends Component {\n  componentDidMount() {\n    this.pathname = getPathname();\n    //poor man's history listener\n    setInterval(() => {\n      const pathname = getPathname();\n      if (this.pathname !== pathname) {\n        this.pathname = pathname;\n        this.setState({});\n      }\n    }, 50);\n\n    fetch(\"levels.json\")\n      .then(res => res.json())\n      .then(res => {\n        const levels = getLevelsFromLocalStorage();\n        this.props.dispatch(\n          levelsLoaded({\n            ...res,\n            ...levels\n          })\n        );\n      });\n  }\n\n  render() {\n    const pathname = getPathname();\n    let component = (\n      <>\n        <GameInfo />\n        <GameStart />\n        <Game />\n      </>\n    );\n\n    if (pathname === \"/leveleditor\") {\n      component = <LevelEditor />;\n    }\n\n    return (\n      <>\n        <div\n          style={{\n            display: \"flex\",\n            flexDirection: \"row\",\n            alignItems: \"center\",\n            justifyContent: \"space-between\"\n          }}\n        >\n          <div style={{ flex: \"1\" }} />\n          <H1 style={{ flex: \"1\" }}>Customers</H1>\n          <div\n            style={{\n              fontSize: \"0.6rem\",\n              color: \"gray\",\n              flex: \"1\"\n            }}\n          >\n            <div\n              style={{\n                marginRight: \"25px\",\n                display: \"flex\",\n                flexDirection: \"column\",\n                justifyContent: \"center\",\n                alignItems: \"flex-end\",\n              }}\n            >\n              <span>{`build: ${build.build} at ${build.date}`}</span>\n              <span>{`version: ${settings.version}`}</span>\n            </div>\n          </div>\n        </div>\n        {component}\n      </>\n    );\n  }\n}\n\nconst mapStateToProps = state => {\n  return {};\n};\n\nexport default connect(\n  mapStateToProps,\n  null\n)(App);\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === \"localhost\" ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === \"[::1]\" ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === \"production\" && \"serviceWorker\" in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener(\"load\", () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            \"This web app is being served cache-first by a service \" +\n              \"worker. To learn more, visit https://bit.ly/CRA-PWA\"\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === \"installed\") {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                \"New content is available and will be used when all \" +\n                  \"tabs for this page are closed. See https://bit.ly/CRA-PWA.\"\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log(\"Content is cached for offline use.\");\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error(\"Error during service worker registration:\", error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get(\"content-type\");\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf(\"javascript\") === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        \"No internet connection found. App is running in offline mode.\"\n      );\n    });\n}\n\nexport function unregister() {\n  if (\"serviceWorker\" in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import { createReducer } from \"../store/utils\";\nimport {\n  COOK_ADDED,\n  COOK_GAINED_EXPERIENCE,\n  CUSTOMER_ADDED,\n  CUSTOMER_PHASE_CHANGED,\n  ACTION_REGISTERED,\n  GAME_STARTED,\n  GAME_STOPPED,\n  LEVELS_LOADED,\n  ORDER_ADDED,\n  ORDER_ATTACHED_TO_CUSTOMER,\n  ORDER_DONE,\n  ORDER_NEXT_PHASE_STARTED,\n  ORDER_PHASE_FINISHED,\n  ORDER_TAKEN,\n  LEVEL_FINISHED,\n  COOKS_RESET,\n  GAME_PAUSED,\n  COOK_LEARNED_SKILL\n} from \"./actions\";\nimport { CUSTOMER_PHASE } from \"./customer/business\";\nimport { getSkill, saveToLocalStorage, SKILL_PLEASER } from \"./cook/business\";\nimport { PREPARATION_PHASE } from \"./dish/business\";\n\nconst initialState = {\n  running: false,\n  paused: false,\n  customers: {},\n  cooks: {},\n  orders: {},\n  customerPhase: {},\n  takenOrderIds: [],\n  orderIdToResult: {},\n  actions: [],\n  levelId: null,\n  levels: null\n};\n\nlet orderResultId = 0;\n\nfunction customerAdded(state, { payload: customer }) {\n  const customers = { ...state.customers };\n  customers[customer.id] = customer;\n  const customerPhase = { ...state.customerPhase };\n  customerPhase[customer.id] = [\n    {\n      phase: CUSTOMER_PHASE.ARRIVING,\n      time: Date.now()\n    }\n  ];\n  return { ...state, customers, customerPhase };\n}\n\nfunction customerPhaseChanged(state, action) {\n  const { customerId, phase, time } = action;\n  const customerPhase = { ...state.customerPhase };\n  const customerPhases = [...customerPhase[customerId]];\n  customerPhases.push({\n    phase,\n    time\n  });\n  customerPhase[customerId] = customerPhases;\n\n  const orderIdToResult = { ...state.orderIdToResult };\n  const orderId = state.customers[customerId].orderId;\n  if (phase === CUSTOMER_PHASE.ANGRY) {\n    orderIdToResult[orderId] = { percent: 0, orderId, id: ++orderResultId };\n  }\n\n  return { ...state, customerPhase, orderIdToResult };\n}\n\nfunction cookAdded(state, { payload: cook }) {\n  const cooks = { ...state.cooks };\n  cooks[cook.id] = cook;\n  return { ...state, cooks };\n}\n\nfunction cookGainedExperience(state, action) {\n  const { cookId, experience } = action;\n  const cooks = { ...state.cooks };\n  const cook = { ...cooks[cookId] };\n  const { experience: cookExperience, nextLevel } = cook;\n  const nextExperience = cookExperience + experience;\n  if (nextExperience >= nextLevel) {\n    cook.level += 1;\n    cook.experience = 0;\n    cook.speed -= 0.01;\n    cook.nextLevel = nextLevel * 2;\n    cook.skillsToTake += 1;\n  } else {\n    cook.experience = nextExperience;\n  }\n  cooks[cookId] = cook;\n  return { ...state, cooks };\n}\n\nfunction cookLearnedSkill(state, action) {\n  const { cookId, skillId } = action;\n  const cooks = { ...state.cooks };\n  const cook = { ...cooks[cookId] };\n  cook.skillsToTake -= 1;\n  const learnedSkill = cook.skills[skillId];\n  if (learnedSkill) {\n    learnedSkill.level += 1;\n    cook.skills[skillId] = learnedSkill;\n  } else {\n    cook.skills[skillId] = getSkill(skillId);\n  }\n  cooks[cookId] = cook;\n  const orderCount = Object.values(state.orders).length;\n  const resultCount = Object.values(state.orderIdToResult).length;\n\n  if (orderCount === resultCount) {\n    saveToLocalStorage(state.cooks);\n  }\n  return { ...state, cooks };\n}\n\nfunction orderAdded(state, { payload: order }) {\n  const orders = { ...state.orders };\n  orders[order.id] = order;\n  return { ...state, orders };\n}\n\nfunction orderAttachedToCustomer(state, action) {\n  const { customerId, orderId } = action;\n  const orders = { ...state.orders };\n  const order = { ...orders[orderId] };\n  order.customerId = customerId;\n  orders[orderId] = order;\n\n  const customers = { ...state.customers };\n  const customer = { ...customers[customerId] };\n  customer.orderId = orderId;\n  customers[customerId] = customer;\n  return { ...state, orders, customers };\n}\n\nfunction orderTaken(state, { payload: orderId }) {\n  const takenOrderIds = [...state.takenOrderIds];\n  takenOrderIds.push(orderId);\n  return { ...state, takenOrderIds };\n}\n\nfunction orderNextPhaseStarted(state, action) {\n  const { orderId, cookId } = action;\n  const cooks = { ...state.cooks };\n  const cook = { ...cooks[cookId] };\n  cook.orderId = orderId;\n  cooks[cookId] = cook;\n\n  const orders = { ...state.orders };\n  const order = { ...orders[orderId] };\n  const dish = { ...order.dish };\n  dish.phase = dish.phases[0];\n  dish.phases = dish.phases.slice(1);\n  order.dish = dish;\n  order.cookId = cookId;\n  orders[orderId] = order;\n\n  return { ...state, cooks, orders };\n}\n\nfunction orderPhaseFinished(state, action) {\n  const { orderId, cookId } = action;\n\n  const cooks = { ...state.cooks };\n  const cook = { ...cooks[cookId] };\n  cook.orderId = null;\n  cooks[cookId] = cook;\n\n  const orders = { ...state.orders };\n  const order = { ...orders[orderId] };\n  const dish = { ...order.dish };\n  dish.phase = PREPARATION_PHASE.WAITING;\n  order.dish = dish;\n  order.cookId = null;\n\n  const skillPleaser = cook.skills[SKILL_PLEASER];\n  if (skillPleaser) {\n    const level = skillPleaser.level;\n    order.timeIncrease += level * 0.02;\n  }\n  orders[orderId] = order;\n\n  return {\n    ...state,\n    cooks,\n    orders\n  };\n}\n\nfunction orderDone(state, action) {\n  const { orderId, cookId, result } = action;\n  const takenOrderIds = [...state.takenOrderIds];\n  const index = takenOrderIds.findIndex(id => id === orderId);\n  if (index > -1) {\n    takenOrderIds.splice(index, 1);\n  }\n\n  const cooks = { ...state.cooks };\n  const cook = cooks[cookId];\n  if (cook) {\n    cook.orderId = null;\n    cooks[cookId] = cook;\n  }\n\n  const orderIdToResult = { ...state.orderIdToResult };\n  orderIdToResult[orderId] = {\n    ...result,\n    orderId,\n    id: ++orderResultId\n  };\n\n  return { ...state, takenOrderIds, orderIdToResult };\n}\n\nexport function actionRegistered(state, action) {\n  const { action: registeredAction, timestamp } = action;\n  const actions = [...state.actions];\n  actions.push({ action: registeredAction, timestamp });\n  return { ...state, actions };\n}\n\nexport const reducer = createReducer(initialState, {\n  [LEVELS_LOADED]: function levelsLoaded(state, { payload }) {\n    return { ...state, levels: payload };\n  },\n  [LEVEL_FINISHED]: function levelFinished(state, action) {\n    saveToLocalStorage(state.cooks);\n    return { ...state, paused: true };\n  },\n  [GAME_STARTED]: function gameStarted(state, { payload }) {\n    return { ...state, running: true, levelId: payload };\n  },\n  [GAME_STOPPED]: function gameStopped(state) {\n    const levels = { ...state.levels };\n    return {\n      ...initialState,\n      levels\n    };\n  },\n  [GAME_PAUSED]: function gamePaused(state, action) {\n    return { ...state, paused: action.payload };\n  },\n  [CUSTOMER_ADDED]: customerAdded,\n  [CUSTOMER_PHASE_CHANGED]: customerPhaseChanged,\n  [COOK_ADDED]: cookAdded,\n  [COOKS_RESET]: function cooksReset(state, action) {\n    return { ...state, cooks: {} };\n  },\n  [COOK_GAINED_EXPERIENCE]: cookGainedExperience,\n  [COOK_LEARNED_SKILL]: cookLearnedSkill,\n  [ORDER_ADDED]: orderAdded,\n  [ORDER_ATTACHED_TO_CUSTOMER]: orderAttachedToCustomer,\n  [ORDER_TAKEN]: orderTaken,\n  [ORDER_DONE]: orderDone,\n  [ORDER_NEXT_PHASE_STARTED]: orderNextPhaseStarted,\n  [ORDER_PHASE_FINISHED]: orderPhaseFinished,\n  [ACTION_REGISTERED]: actionRegistered\n});\n","import { combineReducers } from \"redux\";\nimport { reducer as game } from \"../game/reducer\";\n\nexport const reducer = combineReducers({\n  game\n});\n","import {\n  ACTION_REGISTERED,\n  actionRegistered,\n  GAME_STARTED\n} from \"../game/actions\";\n\n/**\n * The purpose of this middleware is to store all actions as they happen\n * and add a timestamp to them.\n * GAME_STARTED action gets a Date.now() value as timestamp.\n * Other actions have timestamp values relative to GAME_STARTED,\n * in milliseconds since GAME_STARTED happened.\n */\nexport const actionTimestampMiddleware = store => next => action => {\n  const nextAction = next(action);\n  if (nextAction.type !== ACTION_REGISTERED) {\n    let timestamp = Date.now();\n    if (nextAction.type !== GAME_STARTED) {\n      const state = store.getState();\n      const actions = state.game.actions;\n      const gameStartedActions = actions.filter(\n        ({ action }) => action.type === GAME_STARTED\n      );\n      if (gameStartedActions.length > 0) {\n        timestamp = Date.now() - gameStartedActions[0].timestamp;\n      }\n    }\n    store.dispatch(actionRegistered(action, timestamp));\n  }\n  return nextAction;\n};\n","import { applyMiddleware, compose, createStore } from \"redux\";\nimport thunk from \"redux-thunk\";\nimport { reducer } from \"./reducer\";\nimport { actionTimestampMiddleware } from \"../middleware/actionTimestampMiddleware\";\nimport { ACTION_REGISTERED } from \"../game/actions\";\n\nconst composeEnhancers = window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ || compose;\n\nconst logger = store => next => action => {\n  if (process.env.LOG && action.type !== ACTION_REGISTERED) {\n    console.log(action);\n  }\n  return next(action);\n};\n\nexport const store = createNewStore();\n\nexport function createNewStore() {\n  return createStore(\n    reducer,\n    composeEnhancers(applyMiddleware(thunk, actionTimestampMiddleware, logger))\n  );\n}\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./App\";\nimport * as serviceWorker from \"./serviceWorker\";\nimport { Provider } from \"react-redux\";\nimport { store } from \"./store/store\";\n\nReactDOM.render(\n  <Provider store={store}>\n    <App />\n  </Provider>,\n  document.getElementById(\"root\")\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}